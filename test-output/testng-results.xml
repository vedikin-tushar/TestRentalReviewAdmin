<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="6" passed="5" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2023-12-14T16:12:14 IST" name="Suite" finished-at="2023-12-14T16:36:31 IST" duration-ms="1456399">
    <groups>
    </groups>
    <test started-at="2023-12-14T16:12:14 IST" name="Test" finished-at="2023-12-14T16:36:31 IST" duration-ms="1456399">
      <class name="front_test.Base_Class">
        <test-method is-config="true" signature="beforeTest()[pri:0, instance:front_test.Base_Class@702657cc]" started-at="2023-12-14T16:12:14 IST" name="beforeTest" finished-at="2023-12-14T16:12:14 IST" duration-ms="212" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
      </class> <!-- front_test.Base_Class -->
      <class name="front_test.Front_test_Scenario">
        <test-method signature="VerifyRegistrationflowPositiveflow()[pri:0, instance:front_test.Front_test_Scenario@7dcf94f8]" started-at="2023-12-14T16:12:14 IST" name="VerifyRegistrationflowPositiveflow" finished-at="2023-12-14T16:13:28 IST" duration-ms="73237" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyRegistrationflowPositiveflow -->
        <test-method is-config="true" signature="takeScreenshotTest(org.testng.ITestResult)[pri:0, instance:front_test.Front_test_Scenario@7dcf94f8]" started-at="2023-12-14T16:13:28 IST" name="takeScreenshotTest" finished-at="2023-12-14T16:13:30 IST" duration-ms="2372" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=VerifyRegistrationflowPositiveflow status=SUCCESS method=Front_test_Scenario.VerifyRegistrationflowPositiveflow()[pri:0, instance:front_test.Front_test_Scenario@7dcf94f8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenshotTest -->
        <test-method signature="VerifyAdminApprovalflowPositiveflow()[pri:1, instance:front_test.Front_test_Scenario@7dcf94f8]" started-at="2023-12-14T16:13:30 IST" name="VerifyAdminApprovalflowPositiveflow" finished-at="2023-12-14T16:15:01 IST" duration-ms="91363" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyAdminApprovalflowPositiveflow -->
        <test-method is-config="true" signature="takeScreenshotTest(org.testng.ITestResult)[pri:0, instance:front_test.Front_test_Scenario@7dcf94f8]" started-at="2023-12-14T16:15:01 IST" name="takeScreenshotTest" finished-at="2023-12-14T16:15:04 IST" duration-ms="2090" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=VerifyAdminApprovalflowPositiveflow status=SUCCESS method=Front_test_Scenario.VerifyAdminApprovalflowPositiveflow()[pri:1, instance:front_test.Front_test_Scenario@7dcf94f8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenshotTest -->
        <test-method signature="VerifySigninflowPositiveflow()[pri:2, instance:front_test.Front_test_Scenario@7dcf94f8]" started-at="2023-12-14T16:15:04 IST" name="VerifySigninflowPositiveflow" finished-at="2023-12-14T16:19:00 IST" duration-ms="236710" status="FAIL">
          <exception class="org.openqa.selenium.ElementClickInterceptedException">
            <message>
              <![CDATA[element click intercepted: Element is not clickable at point (1328, 1023)
  (Session info: chrome=120.0.6099.71)
Build info: version: '4.11.0', revision: '040bc5406b'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '21.0.1'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [ec181a5eeb34a8d58a0b5af15c37b286, clickElement {id=54E2FBF92FC24B62203B7073288609B1_element_352}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 120.0.6099.71, chrome: {chromedriverVersion: 120.0.6099.71 (9729082fe617..., userDataDir: C:\Users\TUSHAR~1.BAG\AppDa...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:59924}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:59924/devtoo..., se:cdpVersion: 120.0.6099.71, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Element: [[ChromeDriver: chrome on windows (ec181a5eeb34a8d58a0b5af15c37b286)] -> xpath: //button[@type='submit']]
Session ID: ec181a5eeb34a8d58a0b5af15c37b286]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.ElementClickInterceptedException: element click intercepted: Element is not clickable at point (1328, 1023)
  (Session info: chrome=120.0.6099.71)
Build info: version: '4.11.0', revision: '040bc5406b'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '21.0.1'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [ec181a5eeb34a8d58a0b5af15c37b286, clickElement {id=54E2FBF92FC24B62203B7073288609B1_element_352}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 120.0.6099.71, chrome: {chromedriverVersion: 120.0.6099.71 (9729082fe617..., userDataDir: C:\Users\TUSHAR~1.BAG\AppDa...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:59924}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:59924/devtoo..., se:cdpVersion: 120.0.6099.71, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Element: [[ChromeDriver: chrome on windows (ec181a5eeb34a8d58a0b5af15c37b286)] -> xpath: //button[@type='submit']]
Session ID: ec181a5eeb34a8d58a0b5af15c37b286
at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:502)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:486)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:200)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:133)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:52)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:191)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:196)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:171)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:518)
at org.openqa.selenium.remote.RemoteWebElement.execute(RemoteWebElement.java:224)
at org.openqa.selenium.remote.RemoteWebElement.click(RemoteWebElement.java:77)
at front_test.Front_test_Scenario.VerifySigninflowPositiveflow(Front_test_Scenario.java:625)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:227)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:957)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:200)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:848)
at org.testng.TestRunner.run(TestRunner.java:621)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
at org.testng.SuiteRunner.run(SuiteRunner.java:336)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1280)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1200)
at org.testng.TestNG.runSuites(TestNG.java:1114)
at org.testng.TestNG.run(TestNG.java:1082)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.ElementClickInterceptedException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifySigninflowPositiveflow -->
        <test-method is-config="true" signature="takeScreenshotTest(org.testng.ITestResult)[pri:0, instance:front_test.Front_test_Scenario@7dcf94f8]" started-at="2023-12-14T16:19:00 IST" name="takeScreenshotTest" finished-at="2023-12-14T16:19:03 IST" duration-ms="2758" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=VerifySigninflowPositiveflow status=FAILURE method=Front_test_Scenario.VerifySigninflowPositiveflow()[pri:2, instance:front_test.Front_test_Scenario@7dcf94f8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenshotTest -->
        <test-method signature="VerifySignin_forgotpswd_registrationflow_blog_contact_footer_withNegativeflow()[pri:3, instance:front_test.Front_test_Scenario@7dcf94f8]" started-at="2023-12-14T16:19:03 IST" name="VerifySignin_forgotpswd_registrationflow_blog_contact_footer_withNegativeflow" finished-at="2023-12-14T16:20:25 IST" duration-ms="81905" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifySignin_forgotpswd_registrationflow_blog_contact_footer_withNegativeflow -->
        <test-method is-config="true" signature="takeScreenshotTest(org.testng.ITestResult)[pri:0, instance:front_test.Front_test_Scenario@7dcf94f8]" started-at="2023-12-14T16:20:25 IST" name="takeScreenshotTest" finished-at="2023-12-14T16:20:27 IST" duration-ms="2057" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=VerifySignin_forgotpswd_registrationflow_blog_contact_footer_withNegativeflow status=SUCCESS method=Front_test_Scenario.VerifySignin_forgotpswd_registrationflow_blog_contact_footer_withNegativeflow()[pri:3, instance:front_test.Front_test_Scenario@7dcf94f8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenshotTest -->
        <test-method signature="VerifyRegistrationflow_blog_contact_footer_withNegativeflow()[pri:4, instance:front_test.Front_test_Scenario@7dcf94f8]" started-at="2023-12-14T16:20:27 IST" name="VerifyRegistrationflow_blog_contact_footer_withNegativeflow" finished-at="2023-12-14T16:24:06 IST" duration-ms="219337" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyRegistrationflow_blog_contact_footer_withNegativeflow -->
        <test-method is-config="true" signature="takeScreenshotTest(org.testng.ITestResult)[pri:0, instance:front_test.Front_test_Scenario@7dcf94f8]" started-at="2023-12-14T16:24:06 IST" name="takeScreenshotTest" finished-at="2023-12-14T16:24:08 IST" duration-ms="2066" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=VerifyRegistrationflow_blog_contact_footer_withNegativeflow status=SUCCESS method=Front_test_Scenario.VerifyRegistrationflow_blog_contact_footer_withNegativeflow()[pri:4, instance:front_test.Front_test_Scenario@7dcf94f8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenshotTest -->
      </class> <!-- front_test.Front_test_Scenario -->
      <class name="front_test.Admin_test_Scenarios">
        <test-method signature="VerifyadminPositiveflow()[pri:5, instance:front_test.Admin_test_Scenarios@229f66ed]" started-at="2023-12-14T16:24:08 IST" name="VerifyadminPositiveflow" finished-at="2023-12-14T16:36:29 IST" duration-ms="740148" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- VerifyadminPositiveflow -->
        <test-method is-config="true" signature="takeScreenshotTest(org.testng.ITestResult)[pri:0, instance:front_test.Admin_test_Scenarios@229f66ed]" started-at="2023-12-14T16:36:29 IST" name="takeScreenshotTest" finished-at="2023-12-14T16:36:31 IST" duration-ms="2059" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=VerifyadminPositiveflow status=SUCCESS method=Admin_test_Scenarios.VerifyadminPositiveflow()[pri:5, instance:front_test.Admin_test_Scenarios@229f66ed] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeScreenshotTest -->
      </class> <!-- front_test.Admin_test_Scenarios -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
